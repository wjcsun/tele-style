"use strict";(self.webpackChunktele_style=self.webpackChunktele_style||[]).push([[93],{"./src/components/Tooltip/index.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/next@14.2.24_@babel+core@7.26.8_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/compiled/react/jsx-runtime.js"),_index__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/index.ts"),react__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/.pnpm/next@14.2.24_@babel+core@7.26.8_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/compiled/react/index.js"),___WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/Tooltip/index.tsx");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Tooltip",component:___WEBPACK_IMPORTED_MODULE_3__.Z,tags:["autodocs"],argTypes:{targetRef:{table:{type:{summary:"RefObject<HTMLElement> | VirtualElement"}},description:"精确定位的目标元素",control:!1},mode:{control:{type:"radio"},options:["light","dark"],description:"定义工具提示的主题",defaultValue:"light",table:{type:{summary:'"light" | "dark"'}}},arrowProps:{description:"浮动箭头组件的配置和自定义选项",table:{type:{summary:"(FloatingArrowProps & { height?: number; padding?: number; }) | undefined"}}},ArrowIcon:{description:"箭头图标的可选自定义组件，替换默认值。",table:{type:{summary:"ComponentType<SVGAttributes<SVGSVGElement>>"}}},Component:{description:"定义Popper的根元素类型，以进行语义自定义",table:{type:{summary:"ElementType"}}},autoUpdateOnTargetResize:{type:"boolean",description:"当目标元素大小时，选择加入功能将自动更新Popper的位置。"},placement:{control:{type:"select"},options:["auto","auto-start","auto-end","top","right","bottom","left","top-start","top-end","right-start","right-end","bottom-start","bottom-end","left-start","left-end"],description:"默认情况下，组件将自动选择最佳位置",table:{type:{summary:"auto..."}}},withArrow:{type:"boolean",description:"是否显示指向锚元件的箭头。"}}},Default={args:{targetRef:{current:null}},render:args=>{const ref=(0,react__WEBPACK_IMPORTED_MODULE_2__.useRef)(null),[Show,setShow]=(0,react__WEBPACK_IMPORTED_MODULE_2__.useState)(!0);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(_index__WEBPACK_IMPORTED_MODULE_1__.zx,{ref,onClick:()=>setShow(!Show),children:Show?"Hide":"Show"}),Show&&(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__.jsx)(___WEBPACK_IMPORTED_MODULE_3__.Z,{...args,targetRef:ref,children:"Hold to record audio. Tap to switch to video."})]})}},__namedExportsOrder=["Default"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    targetRef: {\n      current: null\n    }\n  },\n  render: args => {\n    const ref = useRef<HTMLDivElement>(null);\n    const [Show, setShow] = useState(true);\n    return <>\n        <Button ref={ref} onClick={() => setShow(!Show)}>\n          {Show ? 'Hide' : 'Show'}\n        </Button>\n        {Show && <Tooltip {...args} targetRef={ref}>\n            Hold to record audio. Tap to switch to video.\n          </Tooltip>}\n      </>;\n  }\n}",...Default.parameters?.docs?.source}}}}}]);