{"version":3,"sources":["../src/components/index.ts","../src/components/Button/index.tsx","../src/components/AppRoot/index.tsx","../src/components/Text/index.tsx","../src/components/Placeholder/index.tsx","../src/components/Tooltip/index.tsx","../src/components/Checkbox/index.tsx","../src/components/Progress/index.tsx","../src/components/Switch/index.tsx","../src/components/Input/index.tsx","../src/components/Slider/index.tsx","../src/components/Tabs/index.tsx","../src/components/Tabs/TabsItem/index.tsx"],"sourcesContent":["export { default as Button } from './Button'\nexport { default as AppRoot } from './AppRoot'\nexport { default as Text } from './Text'\nexport { default as Placeholder } from './Placeholder'\nexport { default as Tooltip } from './Tooltip'\nexport { default as Checkbox } from './Checkbox'\nexport { default as Progress } from './Progress'\nexport { default as Switch } from './Switch'\nexport { default as Input } from './Input'\nexport { default as Slider } from './Slider'\nexport { default as TabsList } from './Tabs'\nexport { default as TabsItem } from './Tabs/TabsItem'\n\nexport type { ProgressTgProps } from './Progress'\nexport type { TgTextProps } from './Text'\n\nexport type { ButtonProps, CheckboxProps, InputProps, PlaceholderProps,  CircularProgressProps, ProgressProps, SliderProps, SwitchProps, TabsListProps, TextProps, TooltipProps} from '@telegram-apps/telegram-ui'\n\n\nimport '@telegram-apps/telegram-ui/dist/styles.css';","\nimport React from \"react\";\n\nimport { Button as TgButton, ButtonProps } from '@telegram-apps/telegram-ui';\n\n\nconst Button = React.forwardRef<HTMLButtonElement | HTMLDivElement, ButtonProps>(({ children, ...props }, ref) => {\n  return (\n    <TgButton {...props} ref={ref}>\n      {children}\n    </TgButton>\n  );\n});\nexport default Button;\n","\"use client\";\nimport { AppRoot as TgRoot } from \"@telegram-apps/telegram-ui\";\nimport * as React from 'react';\nconst AppRoot = ({ children }: { children: React.ReactNode }) => {\n return <TgRoot>\n    {children}\n  </TgRoot>\n}\n\nexport default AppRoot","import { Text as TgText, TextProps } from \"@telegram-apps/telegram-ui\";\nimport React from \"react\";\nexport interface TgTextProps extends TextProps {\n  contentKey?: string | number,\n  color?: string,\n  fontSize?: number | string,\n  fontFamily?: React.CSSProperties['fontFamily']\n}\n\nexport default function Text(props: TgTextProps) {\n  const { contentKey, color, fontSize, fontFamily, ...rest } = props\n  return (\n    <TgText\n      {...rest}\n      style={{\n        color,\n        fontSize,\n        fontFamily,\n        ...rest.style\n      }}>\n      {contentKey}\n    </TgText>\n  )\n}","import { Placeholder as TgPlaceholder, PlaceholderProps } from \"@telegram-apps/telegram-ui\";\nimport React from \"react\";\nexport default function Placeholder(props: PlaceholderProps) {\n  const {children, ...rest } = props\n  return (\n    <TgPlaceholder\n      {...rest}\n      >\n      {children}\n    </TgPlaceholder>\n  )\n}","import { Tooltip as TgTooltip, TooltipProps } from \"@telegram-apps/telegram-ui\";\nimport React from \"react\";\nexport default function Tooltip(props: TooltipProps) {\n  return <TgTooltip {...props}>\n  </TgTooltip>\n}","import { Checkbox as TgCheckbox, CheckboxProps } from '@telegram-apps/telegram-ui'\nimport React from \"react\";\nexport default function Checkbox(props: CheckboxProps) {\n  return <TgCheckbox { ...props }>\n\n  </TgCheckbox>\n}","import { Progress as TgProgress, ProgressProps, CircularProgress, CircularProgressProps } from \"@telegram-apps/telegram-ui\";\nimport { useEffect, useState } from \"react\";\nimport React from \"react\";\nexport interface ProgressTgProps extends ProgressProps, Omit<CircularProgressProps, keyof ProgressProps> {\n  duration?: number;\n  defaultType?: boolean;\n}\n\nexport default function Progress({ value = 100, duration = 0, defaultType = true, ...rest }: ProgressTgProps) {\n  const [progressVal, setProgressVal] = useState(0)\n\n  useEffect(() => {\n    if (value <= 0 || duration <= 0) {\n      setProgressVal(value)\n      return\n    }\n\n    const intervalTime = 100\n    const totalSteps = (duration * 1000) / intervalTime\n    const stepSize = value / totalSteps\n\n    setProgressVal(0)\n    const timer = setInterval(() => {\n      setProgressVal((prev) => {\n        const nextProgress = prev + stepSize\n        if (nextProgress >= value) {\n          clearInterval(timer)\n          return value\n        }\n        return nextProgress\n      })\n    }, intervalTime)\n\n    return () => clearInterval(timer);\n  }, [value, duration]);\n\n  return (\n    <div>\n      {defaultType ? (\n        <TgProgress value={progressVal} {...rest} />\n      ) : (\n        <CircularProgress progress={progressVal} {...rest} />\n      )}\n    </div>\n  );\n}\n","import { Switch as TgSwipch, SwitchProps } from \"@telegram-apps/telegram-ui\";\nimport React from \"react\";\nexport default function Switch(props: SwitchProps) {\n  return <TgSwipch {...props} />\n}","import { Input as TgInput, InputProps } from \"@telegram-apps/telegram-ui\";\nimport React from \"react\";\nexport default function Input(props: InputProps) {\n  return <TgInput {...props} />\n}","import { Slider as TgSlider, SliderProps } from \"@telegram-apps/telegram-ui\";\nimport React from \"react\";\n\nexport default function Slider(props:SliderProps) {\n  return <TgSlider { ...props } />\n}","import { TabsList as TgTabsList, TabsListProps } from \"@telegram-apps/telegram-ui\";\nimport React from \"react\";\n\nexport default function TabsList(props: TabsListProps) {\n  return <TgTabsList {...props}>{ props.children }</TgTabsList>\n}","import { TabsItem as TgTabsItem, TabsItemProps } from \"@telegram-apps/telegram-ui/dist/components/Navigation/TabsList/components/TabsItem/TabsItem\";\nimport React from \"react\";\n\nexport default function TabsItem(props: TabsItemProps) {\n  const { children, ...rest } = props\n  return <TgTabsItem { ...rest }>\n    {children}\n  </TgTabsItem>\n}"],"mappings":"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","names":["React","TgButton","import_telegram_ui","React","TgRoot","import_telegram_ui","import_react","React","TgText","import_telegram_ui","import_react","React","TgPlaceholder","import_telegram_ui","import_react","React","TgTooltip","import_telegram_ui","import_react","React","TgCheckbox","import_telegram_ui","import_react","React","TgProgress","import_telegram_ui","import_react","React","TgSwipch","import_telegram_ui","import_react","React","TgInput","import_telegram_ui","import_react","React","TgSlider","import_telegram_ui","import_react","React","TgTabsList","import_react","React","TgTabsItem"]}